// Prisma schema for listing assistant
// SQLite for local dev; can switch provider to postgresql later

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Vehicle {
  id        String   @id @default(cuid())
  make      String
  model     String
  year      Int
  vin       String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  listings  Listing[]
}

model Listing {
  id              String            @id @default(cuid())
  status          ListingStatus     @default(DRAFT)
  title           String?
  description     String?
  price           Float?
  priceWithDelivery Float?
  freeDelivery    Boolean? @default(false)
  partNumber      String?
  vehicleId       String?
  vehicle         Vehicle?          @relation(fields: [vehicleId], references: [id])
  oemNumber       String?
  manufacturerPartNumber String?
  interchangePartNumber  String?
  fitmentType     String?
  placement       String?
  warrantyType    String?
  warrantyDuration String?
  surfaceFinish   String?
  color           String?
  material        String?
  countryManufacture String?
  conditionTags   String?           // stored as CSV for simplicity (later: separate table)
  ocrPartNumber   String?
  ocrVehicleInfo  String?
  ocrRawText      String?
  ocrConfidence   Int?
  aiTitle         String?
  aiDescription   String?
  suggestedPrices String?           // JSON array
  publishedAt     DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  compatibility   Compatibility[]
  media           MediaAsset[]
}

model Compatibility {
  id        String   @id @default(cuid())
  listingId String
  listing   Listing  @relation(fields: [listingId], references: [id])
  year      String
  make      String
  model     String
  verified  Boolean  @default(false)
  source    String?
  sourceUrl String?
}

model MediaAsset {
  id         String   @id @default(cuid())
  listingId  String
  listing    Listing  @relation(fields: [listingId], references: [id])
  originalName String
  mimeType     String?
  sizeBytes    Int?
  position     Int      @default(0)
  createdAt    DateTime @default(now())
}

enum ListingStatus {
  DRAFT
  PUBLISHED
}
